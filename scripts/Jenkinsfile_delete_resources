#!groovy

node {
  def branch = "main"
  if ("${env.BRANCH}" != "null" && "${env.BRANCH}" != "") {
    branch = "${env.BRANCH}"
  }

  def repo = scm.userRemoteConfigs
  if ("${env.REPO}" != "null" && "${env.REPO}" != "") {
    repo = [
      [url: "${env.REPO}"]
    ]
  }
  def timeout = "60m"
  if ("${env.TIMEOUT}" != "null" && "${env.TIMEOUT}" != "") {
    timeout = "${env.TIMEOUT}"
  }
  wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm', 'defaultFg': 2, 'defaultBg': 1]) {
    withFolderProperties {
      paramsMap = []
      params.each {
        if (it.value && it.value.trim() != "") {
          paramsMap << "$it.key=$it.value"
        }
      }
      withCredentials([

        string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
        string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY'),
      ]) {
        withAWS(region:"${env.REGION}") {
          withEnv(paramsMap) {
            stage('Checkout') {
              deleteDir()
              checkout([
                $class: 'GitSCM',
                branches: [
                  [name: "*/${branch}"]
                ],
                extensions: scm.extensions + [
                  [$class: 'CleanCheckout']
                ],
                userRemoteConfigs: repo
              ])
            }
            dir("./") {
              // try {
              stage('Delete Resources'){
                  sh "./scripts/delete_jenkins_resources.sh -r ${RESOURCE_PREFIX_LIST}"
              }
            } // dir
          } // withEnv
        } // withAWS
      } // withCredentials
    } // withFolderProperties
  } // wrap
} // node